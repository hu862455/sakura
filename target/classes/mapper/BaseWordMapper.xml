<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hushuai.sakura.mapper.BaseWordMapper">
  <resultMap id="BaseResultMap" type="com.hushuai.sakura.dto.BaseWord">
    <!--@mbg.generated-->
    <!--@Table baseWord-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="roma" jdbcType="VARCHAR" property="roma" />
    <result column="ping" jdbcType="VARCHAR" property="ping" />
    <result column="pian" jdbcType="VARCHAR" property="pian" />
    <result column="row_name" jdbcType="VARCHAR" property="rowName" />
    <result column="col_name" jdbcType="VARCHAR" property="colName" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, roma, ping, pian, row_name, col_name, `type`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from baseWord
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from baseWord
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hushuai.sakura.dto.BaseWord" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into baseWord (roma, ping, pian, 
      row_name, col_name, `type`
      )
    values (#{roma,jdbcType=VARCHAR}, #{ping,jdbcType=VARCHAR}, #{pian,jdbcType=VARCHAR}, 
      #{rowName,jdbcType=VARCHAR}, #{colName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hushuai.sakura.dto.BaseWord" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into baseWord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roma != null and roma != ''">
        roma,
      </if>
      <if test="ping != null and ping != ''">
        ping,
      </if>
      <if test="pian != null and pian != ''">
        pian,
      </if>
      <if test="rowName != null and rowName != ''">
        row_name,
      </if>
      <if test="colName != null and colName != ''">
        col_name,
      </if>
      <if test="type != null and type != ''">
        `type`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roma != null and roma != ''">
        #{roma,jdbcType=VARCHAR},
      </if>
      <if test="ping != null and ping != ''">
        #{ping,jdbcType=VARCHAR},
      </if>
      <if test="pian != null and pian != ''">
        #{pian,jdbcType=VARCHAR},
      </if>
      <if test="rowName != null and rowName != ''">
        #{rowName,jdbcType=VARCHAR},
      </if>
      <if test="colName != null and colName != ''">
        #{colName,jdbcType=VARCHAR},
      </if>
      <if test="type != null and type != ''">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hushuai.sakura.dto.BaseWord">
    <!--@mbg.generated-->
    update baseWord
    <set>
      <if test="roma != null and roma != ''">
        roma = #{roma,jdbcType=VARCHAR},
      </if>
      <if test="ping != null and ping != ''">
        ping = #{ping,jdbcType=VARCHAR},
      </if>
      <if test="pian != null and pian != ''">
        pian = #{pian,jdbcType=VARCHAR},
      </if>
      <if test="rowName != null and rowName != ''">
        row_name = #{rowName,jdbcType=VARCHAR},
      </if>
      <if test="colName != null and colName != ''">
        col_name = #{colName,jdbcType=VARCHAR},
      </if>
      <if test="type != null and type != ''">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hushuai.sakura.dto.BaseWord">
    <!--@mbg.generated-->
    update baseWord
    set roma = #{roma,jdbcType=VARCHAR},
      ping = #{ping,jdbcType=VARCHAR},
      pian = #{pian,jdbcType=VARCHAR},
      row_name = #{rowName,jdbcType=VARCHAR},
      col_name = #{colName,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--auto generated by MybatisCodeHelper on 2019-11-01-->
  <select id="selectAllByType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from baseWord
    where `type`=#{type,jdbcType=VARCHAR}
  </select>

<!--auto generated by MybatisCodeHelper on 2019-11-01-->
  <select id="selectAllByColName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from baseWord
        where col_name=#{colName,jdbcType=VARCHAR}
    </select>

<!--auto generated by MybatisCodeHelper on 2019-11-01-->
  <select id="selectAllByRowName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from baseWord
    where row_name=#{rowName,jdbcType=VARCHAR}
  </select>

<!--auto generated by MybatisCodeHelper on 2019-11-01-->
  <select id="selectFirstByPian" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from baseWord
    where pian=#{pian,jdbcType=VARCHAR}
    limit 1
  </select>

<!--auto generated by MybatisCodeHelper on 2019-11-01-->
  <select id="selectFirstByPing" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from baseWord
    where ping=#{ping,jdbcType=VARCHAR} limit 1
  </select>

<!--auto generated by MybatisCodeHelper on 2019-11-01-->
  <select id="selectFirstByRoma" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from baseWord
    where roma=#{roma,jdbcType=VARCHAR} limit 1
  </select>

<!--auto generated by MybatisCodeHelper on 2019-11-01-->
  <select id="count" resultType="java.lang.Integer">
    select count(1)
    from baseWord
  </select>

<!--auto generated by MybatisCodeHelper on 2019-11-08-->
  <select id="selectRandByType" resultMap="BaseResultMap">
    SELECT
    *
    FROM
    baseWord
    WHERE
    `type`=#{type,jdbcType=VARCHAR}
    and baseWord.id >= FLOOR(
    RAND( ) * (
    ( SELECT MAX( U1.id ) FROM baseWord AS U1 ) - ( SELECT MIN( U2.id ) FROM baseWord AS U2 )
    ) + ( SELECT MIN( U3.id ) FROM baseWord AS U3 )
    )
    ORDER BY
    baseWord.id ASC
    LIMIT 1;
  </select>
</mapper>